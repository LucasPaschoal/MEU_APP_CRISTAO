COMPONENTES FLUTTER UTILIZADOS NO PROJETO

üìö COMPONENTES VISTOS EM AULA
1. ESTRUTURA B√ÅSICA

MaterialApp - App principal com tema personalizado
Scaffold - Estrutura b√°sica das telas
AppBar - Barra superior com t√≠tulo e a√ß√µes
FloatingActionButton - Bot√£o flutuante para adicionar itens

2. NAVEGA√á√ÉO
BottomNavigationBar - Navega√ß√£o inferior entre 3 telas
BottomNavigationBarItem - Itens da navega√ß√£o inferior

3. LAYOUT E CONTAINERS
Column - Organiza√ß√£o vertical de widgets
Row - Organiza√ß√£o horizontal de widgets
Container - Containers com decora√ß√£o e padding
Card - Cards para exibir itens das listas
ListView.builder - Listas din√¢micas otimizadas
Padding - Espa√ßamento interno
SizedBox - Espa√ßamento fixo entre widgets
Center - Centraliza√ß√£o de widgets
Expanded - Expans√£o de widgets em flex containers

4. INTERA√á√ÉO
ElevatedButton - Bot√µes principais
TextButton - Bot√µes de texto
IconButton - Bot√µes com √≠cones
Checkbox - Caixas de sele√ß√£o
GestureDetector - Detec√ß√£o de gestos de toque
TextField - Campos de entrada de texto

5. EXIBI√á√ÉO DE TEXTO
Text - Exibi√ß√£o de texto com estilos
TextStyle - Estiliza√ß√£o de texto

6. √çCONES E CORES
Icon - Exibi√ß√£o de √≠cones
Icons - Biblioteca de √≠cones do Material Design
Colors - Paleta de cores do Material Design

7. DI√ÅLOGOS
AlertDialog - Di√°logos de confirma√ß√£o e entrada
showDialog - Exibi√ß√£o de di√°logos

8. DECORA√á√ÉO
BoxDecoration - Decora√ß√£o de containers
BorderRadius - Bordas arredondadas
Border - Bordas personalizadas

üìö COMPONENTES NOVOS (N√ÉO VISTOS EM AULA)
1. NAVEGA√á√ÉO AVAN√áADA
TabController - Controlador para TabBar/TabView
TabBar - Barra de abas horizontais
TabBarView - Visualizador de conte√∫do das abas
Tab - Item individual da TabBar
TickerProviderStateMixin - Mixin para anima√ß√µes

Por que usei: Necess√°rio para criar as abas "Antigo Testamento" e "Novo Testamento" na tela de leitura b√≠blica, organizando melhor o conte√∫do.

2. LISTAS AVAN√áADAS
ExpansionTile - Item expans√≠vel em listas

Por que usei: ExpansionTile permite mostrar/ocultar os cap√≠tulos de cada livro b√≠blico. ListTile padroniza a exibi√ß√£o dos itens nas listas.

3. LAYOUT FLEX√çVEL
Wrap - Layout que quebra linha automaticamente
LinearProgressIndicator - Barra de progresso linear
CircleAvatar - Avatar circular
SingleChildScrollView - Scroll em conte√∫do √∫nico

Por que usei:

Wrap para organizar os n√∫meros dos cap√≠tulos b√≠blicos
LinearProgressIndicator para mostrar progresso de leitura
CircleAvatar para indicadores visuais nos livros
SingleChildScrollView para di√°logos com muito conte√∫do

4. MENUS E NAVEGA√á√ÉO
PopupMenuButton - Menu suspenso
PopupMenuItem - Item do menu suspenso

Por que usei: Para criar menus de a√ß√µes como "Excluir Todos", "Marcar livro completo", organizando melhor as op√ß√µes.

5. INDICADORES DE ESTADO
CircularProgressIndicator - Indicador de carregamento circular
SnackBar - Mensagens tempor√°rias na parte inferior

Por que usei:

CircularProgressIndicator para mostrar carregamento dos dados do Firebase
SnackBar para feedback das a√ß√µes do usu√°rio

6. CAMPOS DE ENTRADA AVAN√áADOS
TextEditingController - Controlador de campos de texto
InputDecoration - Decora√ß√£o de campos de entrada
OutlineInputBorder - Borda de campo de texto
Por que usei: Para controlar e estilizar os campos de entrada nos formul√°rios de pedidos e devocionais.

7. DECORA√á√ÉO AVAN√áADA
RoundedRectangleBorder - Bordas arredondadas personalizadas
BoxShadow - Sombras em containers
LinearGradient - Gradientes lineares
WidgetStateProperty - Propriedades baseadas no estado do widget

Por que usei: Para criar uma interface mais moderna e atrativa com sombras, gradientes e bordas personalizadas.

8. TEMAS E ESTILIZA√á√ÉO
ThemeData - Dados de tema do app
AppBarTheme - Tema da AppBar
CardTheme - Tema dos Cards
CheckboxTheme - Tema dos Checkboxes
ElevatedButtonTheme - Tema dos bot√µes
FloatingActionButtonTheme - Tema do FAB
SnackBarTheme - Tema das SnackBars

Por que usei: Para manter consist√™ncia visual em todo o app com um tema personalizado baseado na cor √≠ndigo.

9. FORMATA√á√ÉO
DateFormat (do pacote intl) - Formata√ß√£o de datas
Timestamp (do Firebase) - Timestamps do Firestore

Por que usei: Para exibir as datas de cria√ß√£o dos pedidos e devocionais em formato brasileiro (dd/MM/yyyy).

10. ESTADO E LIFECYCLE
mounted - Verifica√ß√£o se widget ainda est√° na √°rvore
dispose() - Limpeza de recursos
setState() - Atualiza√ß√£o de estado (visto em aula, mas uso avan√ßado)

Por que usei: Para evitar erros ao atualizar widgets que j√° foram removidos da √°rvore e para limpar controladores adequadamente.